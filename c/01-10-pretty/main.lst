                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _countdown_to_scroll
                             13 	.globl _cursor_position
                             14 	.globl _offset
                             15 	.globl _random_number
                             16 	.globl _init
                             17 	.globl _update_random_number
                             18 	.globl _print
                             19 	.globl _fill_vram
                             20 	.globl _wait_for_v_blank
                             21 	.globl _set_cursor
                             22 ;--------------------------------------------------------
                             23 ; special function registers
                             24 ;--------------------------------------------------------
                     00D0    25 G$rSCX$0_0$0 == 0x00d0
                     00D0    26 _rSCX	=	0x00d0
                     FF41    27 G$LCD_STATUS$0_0$0 == 0xff41
                     FF41    28 _LCD_STATUS	=	0xff41
                     FF42    29 G$LCD_SCROLL_Y$0_0$0 == 0xff42
                     FF42    30 _LCD_SCROLL_Y	=	0xff42
                     FF44    31 G$LCD_Y_COORDINATE$0_0$0 == 0xff44
                     FF44    32 _LCD_Y_COORDINATE	=	0xff44
                     FF47    33 G$LCD_BG_PALETTE$0_0$0 == 0xff47
                     FF47    34 _LCD_BG_PALETTE	=	0xff47
                             35 ;--------------------------------------------------------
                             36 ; ram data
                             37 ;--------------------------------------------------------
                             38 	.area _DATA
                     0000    39 G$random_number$0_0$0==.
   0000                      40 _random_number::
   0000                      41 	.ds 1
                     0001    42 G$offset$0_0$0==.
   0001                      43 _offset::
   0001                      44 	.ds 1
                     0002    45 G$cursor_position$0_0$0==.
   0002                      46 _cursor_position::
   0002                      47 	.ds 1
                     0003    48 G$countdown_to_scroll$0_0$0==.
   0003                      49 _countdown_to_scroll::
   0003                      50 	.ds 1
                             51 ;--------------------------------------------------------
                             52 ; absolute external ram data
                             53 ;--------------------------------------------------------
                             54 	.area _DABS (ABS)
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _GSINIT
                             60 	.area _GSFINAL
                             61 	.area _GSINIT
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area _HOME
                             66 	.area _HOME
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area _CODE
                     0000    71 	G$main$0$0	= .
                             72 	.globl	G$main$0$0
                     0000    73 	C$main.c$33$0_0$1	= .
                             74 	.globl	C$main.c$33$0_0$1
                             75 ;main.c:33: void main() {
                             76 ;	---------------------------------
                             77 ; Function main
                             78 ; ---------------------------------
   0000                      79 _main::
                     0000    80 	C$main.c$35$1_0$1	= .
                             81 	.globl	C$main.c$35$1_0$1
                             82 ;main.c:35: init();
   0000 CDr18r00             83 	call	_init
                     0003    84 	C$main.c$37$1_0$1	= .
                             85 	.globl	C$main.c$37$1_0$1
                             86 ;main.c:37: while (1) {
   0003                      87 00102$:
                     0003    88 	C$main.c$38$2_0$2	= .
                             89 	.globl	C$main.c$38$2_0$2
                             90 ;main.c:38: update_random_number();
   0003 CDr19r00             91 	call	_update_random_number
                     0006    92 	C$main.c$40$2_0$2	= .
                             93 	.globl	C$main.c$40$2_0$2
                             94 ;main.c:40: offset = random_number & 1;
   0006 21r00r00             95 	ld	hl, #_random_number
   0009 7E                   96 	ld	a, (hl)
   000A E6 01                97 	and	a, #0x01
   000C 21r01r00             98 	ld	hl, #_offset
                     000F    99 	C$main.c$41$2_0$2	= .
                            100 	.globl	C$main.c$41$2_0$2
                            101 ;main.c:41: offset += 1;
   000F 77                  102 	ld	(hl),a
   0010 3C                  103 	inc	a
   0011 77                  104 	ld	(hl), a
                     0012   105 	C$main.c$43$2_0$2	= .
                            106 	.globl	C$main.c$43$2_0$2
                            107 ;main.c:43: print();
   0012 CDr1Ar00            108 	call	_print
   0015 18 EC               109 	jr	00102$
                     0017   110 	C$main.c$45$1_0$1	= .
                            111 	.globl	C$main.c$45$1_0$1
                            112 ;main.c:45: }
                     0017   113 	C$main.c$45$1_0$1	= .
                            114 	.globl	C$main.c$45$1_0$1
                     0017   115 	XG$main$0$0	= .
                            116 	.globl	XG$main$0$0
   0017 C9                  117 	ret
                     0018   118 	G$init$0$0	= .
                            119 	.globl	G$init$0$0
                     0018   120 	C$main.c$47$1_0$4	= .
                            121 	.globl	C$main.c$47$1_0$4
                            122 ;main.c:47: void init() {
                            123 ;	---------------------------------
                            124 ; Function init
                            125 ; ---------------------------------
   0018                     126 _init::
                     0018   127 	C$main.c$49$1_0$4	= .
                            128 	.globl	C$main.c$49$1_0$4
                            129 ;main.c:49: }
                     0018   130 	C$main.c$49$1_0$4	= .
                            131 	.globl	C$main.c$49$1_0$4
                     0018   132 	XG$init$0$0	= .
                            133 	.globl	XG$init$0$0
   0018 C9                  134 	ret
                     0019   135 	G$update_random_number$0$0	= .
                            136 	.globl	G$update_random_number$0$0
                     0019   137 	C$main.c$51$1_0$6	= .
                            138 	.globl	C$main.c$51$1_0$6
                            139 ;main.c:51: void update_random_number() {
                            140 ;	---------------------------------
                            141 ; Function update_random_number
                            142 ; ---------------------------------
   0019                     143 _update_random_number::
                     0019   144 	C$main.c$53$1_0$6	= .
                            145 	.globl	C$main.c$53$1_0$6
                            146 ;main.c:53: }
                     0019   147 	C$main.c$53$1_0$6	= .
                            148 	.globl	C$main.c$53$1_0$6
                     0019   149 	XG$update_random_number$0$0	= .
                            150 	.globl	XG$update_random_number$0$0
   0019 C9                  151 	ret
                     001A   152 	G$print$0$0	= .
                            153 	.globl	G$print$0$0
                     001A   154 	C$main.c$55$1_0$7	= .
                            155 	.globl	C$main.c$55$1_0$7
                            156 ;main.c:55: void print() {
                            157 ;	---------------------------------
                            158 ; Function print
                            159 ; ---------------------------------
   001A                     160 _print::
                     001A   161 	C$main.c$56$1_0$7	= .
                            162 	.globl	C$main.c$56$1_0$7
                            163 ;main.c:56: fill_vram();
   001A CDr29r00            164 	call	_fill_vram
                     001D   165 	C$main.c$57$1_0$7	= .
                            166 	.globl	C$main.c$57$1_0$7
                            167 ;main.c:57: LCD_SCROLL_Y += 16;
   001D F0 42               168 	ldh	a, (_LCD_SCROLL_Y+0)
   001F C6 10               169 	add	a, #0x10
   0021 E0 42               170 	ldh	(_LCD_SCROLL_Y+0),a
                     0023   171 	C$main.c$58$1_0$7	= .
                            172 	.globl	C$main.c$58$1_0$7
                            173 ;main.c:58: wait_for_v_blank();
   0023 CDr2Ar00            174 	call	_wait_for_v_blank
                     0026   175 	C$main.c$59$1_0$7	= .
                            176 	.globl	C$main.c$59$1_0$7
                            177 ;main.c:59: set_cursor();
                     0026   178 	C$main.c$60$1_0$7	= .
                            179 	.globl	C$main.c$60$1_0$7
                            180 ;main.c:60: }
                     0026   181 	C$main.c$60$1_0$7	= .
                            182 	.globl	C$main.c$60$1_0$7
                     0026   183 	XG$print$0$0	= .
                            184 	.globl	XG$print$0$0
   0026 C3r31r00            185 	jp	_set_cursor
                     0029   186 	G$fill_vram$0$0	= .
                            187 	.globl	G$fill_vram$0$0
                     0029   188 	C$main.c$62$1_0$9	= .
                            189 	.globl	C$main.c$62$1_0$9
                            190 ;main.c:62: void fill_vram() {
                            191 ;	---------------------------------
                            192 ; Function fill_vram
                            193 ; ---------------------------------
   0029                     194 _fill_vram::
                     0029   195 	C$main.c$64$1_0$9	= .
                            196 	.globl	C$main.c$64$1_0$9
                            197 ;main.c:64: }
                     0029   198 	C$main.c$64$1_0$9	= .
                            199 	.globl	C$main.c$64$1_0$9
                     0029   200 	XG$fill_vram$0$0	= .
                            201 	.globl	XG$fill_vram$0$0
   0029 C9                  202 	ret
                     002A   203 	G$wait_for_v_blank$0$0	= .
                            204 	.globl	G$wait_for_v_blank$0$0
                     002A   205 	C$main.c$66$1_0$10	= .
                            206 	.globl	C$main.c$66$1_0$10
                            207 ;main.c:66: void wait_for_v_blank() {
                            208 ;	---------------------------------
                            209 ; Function wait_for_v_blank
                            210 ; ---------------------------------
   002A                     211 _wait_for_v_blank::
                     002A   212 	C$main.c$67$1_0$10	= .
                            213 	.globl	C$main.c$67$1_0$10
                            214 ;main.c:67: while (LCD_Y_COORDINATE != 144) {};
   002A                     215 00101$:
   002A F0 44               216 	ldh	a, (_LCD_Y_COORDINATE+0)
   002C D6 90               217 	sub	a, #0x90
   002E 20 FA               218 	jr	NZ,00101$
                     0030   219 	C$main.c$68$1_0$10	= .
                            220 	.globl	C$main.c$68$1_0$10
                            221 ;main.c:68: }
                     0030   222 	C$main.c$68$1_0$10	= .
                            223 	.globl	C$main.c$68$1_0$10
                     0030   224 	XG$wait_for_v_blank$0$0	= .
                            225 	.globl	XG$wait_for_v_blank$0$0
   0030 C9                  226 	ret
                     0031   227 	G$set_cursor$0$0	= .
                            228 	.globl	G$set_cursor$0$0
                     0031   229 	C$main.c$70$1_0$13	= .
                            230 	.globl	C$main.c$70$1_0$13
                            231 ;main.c:70: void set_cursor() {
                            232 ;	---------------------------------
                            233 ; Function set_cursor
                            234 ; ---------------------------------
   0031                     235 _set_cursor::
                     0031   236 	C$main.c$72$1_0$13	= .
                            237 	.globl	C$main.c$72$1_0$13
                            238 ;main.c:72: }
                     0031   239 	C$main.c$72$1_0$13	= .
                            240 	.globl	C$main.c$72$1_0$13
                     0031   241 	XG$set_cursor$0$0	= .
                            242 	.globl	XG$set_cursor$0$0
   0031 C9                  243 	ret
                            244 	.area _CODE
                            245 	.area _CABS (ABS)
